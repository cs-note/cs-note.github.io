(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{172:function(t,s,e){"use strict";e.r(s);var a=e(6),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("h2",{attrs:{id:"memory-model"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#memory-model","aria-hidden":"true"}},[t._v("#")]),t._v(" Memory model")]),t._v(" "),e("p",[t._v("Now this is cleared:")]),t._v(" "),e("ul",[e("li",[t._v("variables in a function body are stored on the stack")]),t._v(" "),e("li",[t._v("objects created by "),e("code",[t._v("new")]),t._v(" are stored in the heap (and their address returned)")])]),t._v(" "),e("p",[t._v("With examples, to be a bit more visual:")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("f0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tClass"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tClass"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" c "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tc "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Here "),e("code",[t._v("c")]),t._v(" (of type "),e("code",[t._v("Class*")]),t._v(") is stored on the stack and points to an object (of type "),e("code",[t._v("Class")]),t._v(") that is stored on the heap")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tClass "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("c")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("f3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tClass "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("c")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Here "),e("code",[t._v("c")]),t._v(" is stored on the stack. In "),e("code",[t._v("f2")]),t._v(" there "),e("em",[t._v("might")]),t._v(" be a temporary (object without name) created by the expression "),e("code",[t._v("Class()")]),t._v(" and then copied into "),e("code",[t._v("c")]),t._v(" (depending on whether the compiler elides the copy or not), the storage of temporaries is not addressed by the Standard... they commonly use the stack though.")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://stackoverflow.com/a/8755644/4446356",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ref"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"vector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vector","aria-hidden":"true"}},[t._v("#")]),t._v(" vector")]),t._v(" "),e("p",[t._v("像是 dynamic array 一樣能提供快速的 random access，實作是分配一塊連續的記憶體空間，當不夠時會重新分配另一塊記憶體空間，並將原本的元素複製過去，因為實作是array，當 insert 元素在結尾以外的地方會非常沒有效率。")]),t._v(" "),e("h3",{attrs:{id:"time-complexity"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#time-complexity","aria-hidden":"true"}},[t._v("#")]),t._v(" Time complexity")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Operation")]),t._v(" "),e("th",[t._v("Big O")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("access")]),t._v(" "),e("td",[t._v("O(1)")])]),t._v(" "),e("tr",[e("td",[t._v("push_back")]),t._v(" "),e("td",[t._v("O(1)，如果超過原本的容量就會到達O(n)")])]),t._v(" "),e("tr",[e("td",[t._v("pop_back")]),t._v(" "),e("td",[t._v("O(1)")])]),t._v(" "),e("tr",[e("td",[t._v("insert")]),t._v(" "),e("td",[t._v("O(number of inserted elements) + O(number of elements after insert position)")])]),t._v(" "),e("tr",[e("td",[t._v("erase")]),t._v(" "),e("td",[t._v("O(number of erased elements) + O(number of elements after erased position)")])])])]),t._v(" "),e("h2",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list","aria-hidden":"true"}},[t._v("#")]),t._v(" list")]),t._v(" "),e("p",[t._v("list 使用 doubly-linked list 實作，insert 和 erase 都是constant time，")]),t._v(" "),e("h3",{attrs:{id:"time-complexity-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#time-complexity-2","aria-hidden":"true"}},[t._v("#")]),t._v(" Time complexity")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Operation")]),t._v(" "),e("th",[t._v("Big O")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("front")]),t._v(" "),e("td",[t._v("O(1)")])]),t._v(" "),e("tr",[e("td",[t._v("back")]),t._v(" "),e("td",[t._v("O(1)")])]),t._v(" "),e("tr",[e("td",[t._v("push_front")]),t._v(" "),e("td",[t._v("O(1)")])]),t._v(" "),e("tr",[e("td",[t._v("push_back")]),t._v(" "),e("td",[t._v("O(1)")])]),t._v(" "),e("tr",[e("td",[t._v("pop_front")]),t._v(" "),e("td",[t._v("O(1)")])]),t._v(" "),e("tr",[e("td",[t._v("pop_back")]),t._v(" "),e("td",[t._v("O(1)")])]),t._v(" "),e("tr",[e("td",[t._v("insert")]),t._v(" "),e("td",[t._v("O(number of inserted elements)")])]),t._v(" "),e("tr",[e("td",[t._v("erase")]),t._v(" "),e("td",[t._v("O(number of erased elements)")])]),t._v(" "),e("tr",[e("td",[t._v("sort")]),t._v(" "),e("td",[t._v("O(nlogn)，n is container size")])]),t._v(" "),e("tr",[e("td",[t._v("reverse")]),t._v(" "),e("td",[t._v("O(n)，n is container size")])]),t._v(" "),e("tr",[e("td",[t._v("unique")]),t._v(" "),e("td",[t._v("O(n-1)，n is container size")])])])])])},[],!1,null,null,null);n.options.__file="README.md";s.default=n.exports}}]);